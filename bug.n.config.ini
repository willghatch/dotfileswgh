; bug.n - tiling window management
; @version 9.0.0

; Notes:
; AutoHotkey special characters:
; # is super
; ! is alt
; ^ is ctrl
; + is shift
; <! is left alt, >! is right alt, etc for combining < or > with other mods

;; Status bar
;Config_showBar=1
;Config_horizontalBarPos=left
;Config_verticalBarPos=top
;Config_barWidth=100%
;Config_singleRowBar=1
;Config_spaciousBar=0
;Config_fontName=Lucida Console
;Config_fontSize=
;Config_largeFontSize=24
;; <view>;<layout>;<title>;<shebang>;<time>;<date>;<anyText>;<batteryStatus>;<volumeLevel>
;Config_backColor_#1=
;Config_backColor_#2=
;Config_backColor_#3=
;Config_foreColor_#1=
;Config_foreColor_#2=
;Config_foreColor_#3=
;Config_fontColor_#1=
;Config_fontColor_#2=
;Config_fontColor_#3=
;Config_barTransparency=off
;Config_barCommands=Run, explore doc;Monitor_toggleBar();Main_reload();Reload;ExitApp
;Config_readinBat=0
Config_readinCpu=1
;Config_readinDate=1
;Config_readinDiskLoad=0
Config_readinMemoryUsage=1
Config_readinNetworkLoad=1
;Config_readinTime=1
Config_readinVolume=1
;Config_readinInterval=30000

;; top bar non-focused workspace tag background
Config_backColor_#1=101010;603000;Black;603000;Black;603000;000060;404040;080808
;; top bar focused workspace tag background
Config_backColor_#2=808080;;;;;;;202020;080808
;; Config_backColor_#3=;;;;;;;ff8040;
;; top bar non-focused workspace tag background
Config_foreColor_#1=40c0ff;101010;Black;101010;Black;101010;Black;404040;202020
;; top bar focused workspace tag background
Config_foreColor_#2=40c0ff;;;;;;;0000ff;0000ff
Config_foreColor_#3=;;;;;;;010101;
Config_fontColor_#1=White;White;White;White;White;White;White;Black;808080
Config_fontColor_#2=Black;;;;;;;White;White
Config_fontColor_#3=;;;;;;;Black;

;; Windows ui elements
;Config_bbCompatibility=0
;Config_borderWidth=0
;Config_borderPadding=-1
;Config_showTaskBar=0
Config_showTaskBar=1
;Config_showBorder=1
;Config_selBorderColor=

;; Window arrangement
;Config_viewNames=1;2;3;4;5;6;7;8;9
;Config_layout_#1=[]=;tile
;Config_layout_#2=[M];monocle
;Config_layout_#3=><>;
;Config_layoutCount=3
;Config_layoutAxis_#1=1
;Config_layoutAxis_#2=2
;Config_layoutAxis_#3=2
;Config_layoutGapWidth=0
;Config_layoutMFactor=0.6
;Config_areaTraceTimeout=1000
;Config_continuouslyTraceAreas=0
;Config_dynamicTiling=1
;Config_ghostWndSubString= (Not Responding)
;Config_mFactCallInterval=700
;Config_mouseFollowsFocus=1
;Config_newWndPosition=top
;Config_onActiveHiddenWnds=view
;Config_shellMsgDelay=350
;Config_syncMonitorViews=0
;Config_viewFollowsTagged=0
;Config_viewMargins=0;0;0;0

;; Config_rule_#<i> := '<class>;<title>;<function name>;<is managed>;<m>;<tags>;<is floating>;<is decorated>;<hide title>;<action>'
;Config_rule_#1=.*;.*;;1;0;0;0;0;0;
;Config_rule_#2=.*;.*;Window_isPopup;0;0;0;1;1;1;
;Config_rule_#3=QWidget;.*;;1;0;0;0;0;0;
;Config_rule_#4=SWT_Window0;.*;;1;0;0;0;0;0;
;Config_rule_#5=Xming;.*;;1;0;0;0;0;0;
;Config_rule_#6=MsiDialog(No)?CloseClass;.*;;1;0;0;1;1;0;
;Config_rule_#7=AdobeFlashPlayerInstaller;.*;;1;0;0;1;0;0;
;Config_rule_#8=CalcFrame;.*;;1;0;0;1;1;0;
;Config_rule_#9=CabinetWClass;.*;;1;0;0;0;1;0;
;Config_rule_#10=OperationStatusWindow;.*;;0;0;0;1;1;0;
;Config_rule_#11=Chrome_WidgetWin_1;.*;;1;0;0;0;1;0;
;Config_rule_#12=Chrome_WidgetWin_1;.*;Window_isPopup;0;0;0;1;1;1;
;Config_rule_#13=Chrome_RenderWidgetHostHWND;.*;;0;0;0;1;1;0;
;Config_rule_#14=IEFrame;.*Internet Explorer;;1;0;0;0;1;0;
;Config_rule_#15=MozillaWindowClass;.*Mozilla Firefox;;1;0;0;0;1;0;
;Config_rule_#16=MozillaDialogClass;.*;;1;0;0;1;1;0;

;; Configuration management
;Config_autoSaveSession=auto
;Config_maintenanceInterval=5000

;; Key definitions
;; Window management
;; # is window key, + is shift, ! is alt, ^ is control
Config_hotkey=#j::View_activateWindow(0, +1)
Config_hotkey=#k::View_activateWindow(0, -1)
Config_hotkey=#!j::View_shuffleWindow(0, +1)
Config_hotkey=#!k::View_shuffleWindow(0, -1)
;Config_hotkey=#+Enter::View_shuffleWindow(1)
Config_hotkey=#c::Manager_closeWindow()
;Config_hotkey=#+d::Window_toggleDecor()
Config_hotkey=#+f::View_toggleFloatingWindow()
;Config_hotkey=#+m::Manager_moveWindow()
;Config_hotkey=#+s::Manager_sizeWindow()
;Config_hotkey=#f::Manager_maximizeWindow()
;Config_hotkey=#i::Manager_getWindowInfo()
;Config_hotkey=#+i::Manager_getWindowList()
;Config_hotkey=!Down::View_moveWindow(0, +1)
;Config_hotkey=!Up::View_moveWindow(0, -1)
;Config_hotkey=!+Enter::Manager_maximizeWindow()
;Config_hotkey=!1::View_moveWindow(1)
;Config_hotkey=!2::View_moveWindow(2)
;Config_hotkey=!3::View_moveWindow(3)
;Config_hotkey=!4::View_moveWindow(4)
;Config_hotkey=!5::View_moveWindow(5)
;Config_hotkey=!6::View_moveWindow(6)
;Config_hotkey=!7::View_moveWindow(7)
;Config_hotkey=!8::View_moveWindow(8)
;Config_hotkey=!9::View_moveWindow(9)
;Config_hotkey=!0::View_moveWindow(10)
;Config_hotkey=!BackSpace::View_toggleStackArea()
Config_hotkey=!BackSpace::

;; Window debugging
;Config_hotkey=#^i::Debug_logViewWindowList()
;Config_hotkey=#+^i::Debug_logManagedWindowList()
;Config_hotkey=#^h::Debug_logHelp()
;Config_hotkey=#^d::Debug_setLogLevel(0, -1)
;Config_hotkey=#^+d::Debug_setLogLevel(0, +1)

;; Layout management
;Config_hotkey=#Tab::View_setLayout(-1)
Config_hotkey=#!^f::View_setLayout(3)
Config_hotkey=#!^m::View_setLayout(2)
Config_hotkey=#f::View_setLayout(2)
Config_hotkey=#!^t::View_setLayout(1)
Config_hotkey=#Space::View_setLayout(1)
;Config_hotkey=#m::View_setLayout(2)
;Config_hotkey=#t::View_setLayout(1)
Config_hotkey=#h::View_setLayoutProperty(MFactor, 0, -0.05)
Config_hotkey=#l::View_setLayoutProperty(MFactor, 0, +0.05)
Config_hotkey=#!h::View_setLayoutProperty(MY, 0, +1)
Config_hotkey=#!l::View_setLayoutProperty(MY, 0, -1)
Config_hotkey=#q::Manager_lockWorkStation()
;Config_hotkey=#^t::View_setLayoutProperty(Axis, 0, +1, 1)
;Config_hotkey=#^Enter::View_setLayoutProperty(Axis, 0, +2, 1)
;Config_hotkey=#^Tab::View_setLayoutProperty(Axis, 0, +1, 2)
;Config_hotkey=#^+Tab::View_setLayoutProperty(Axis, 0, +1, 3)
;Config_hotkey=#^Up::View_setLayoutProperty(MY, 0, +1)
;Config_hotkey=#^Down::View_setLayoutProperty(MY, 0, -1)
;Config_hotkey=#^Right::View_setLayoutProperty(MX, 0, +1)
;Config_hotkey=#^Left::View_setLayoutProperty(MX, 0, -1)
;Config_hotkey=#+Left::View_setLayoutProperty(GapWidth, 0, -2)
;Config_hotkey=#+Right::View_setLayoutProperty(GapWidth, 0, +2)

;; View/Tag management
;Config_hotkey=#+n::View_toggleMargins()
;Config_hotkey=#BackSpace::Monitor_activateView(-1)
Config_hotkey=#w::Monitor_activateView(0, +1)
Config_hotkey=#b::Monitor_activateView(0, -1)
;Config_hotkey=#!w::Monitor_toggleWindowTag(0, +1)
;Config_hotkey=#!b::Monitor_toggleWindowTag(0, -1)
Config_hotkey=#!w::Monitor_setWindowTag(0, +1)
Config_hotkey=#!b::Monitor_setWindowTag(0, -1)
;Config_hotkey=#0::Monitor_setWindowTag(10)
;Config_hotkey=#1::Monitor_setWindowTag(1)
;Config_hotkey=#2::Monitor_setWindowTag(2)
;Config_hotkey=#3::Monitor_setWindowTag(3)
;Config_hotkey=#4::Monitor_setWindowTag(4)
;Config_hotkey=#5::Monitor_setWindowTag(5)
;Config_hotkey=#6::Monitor_setWindowTag(6)
;Config_hotkey=#7::Monitor_setWindowTag(7)
;Config_hotkey=#8::Monitor_setWindowTag(8)
;Config_hotkey=#9::Monitor_setWindowTag(9)
;Config_hotkey=#+0::Monitor_setWindowTag(10)
;Config_hotkey=#1::Monitor_activateView(1)
;Config_hotkey=#+1::Monitor_setWindowTag(1)
;Config_hotkey=#^1::Monitor_toggleWindowTag(1)
;Config_hotkey=#2::Monitor_activateView(2)
;Config_hotkey=#+2::Monitor_setWindowTag(2)
;Config_hotkey=#^2::Monitor_toggleWindowTag(2)
;Config_hotkey=#3::Monitor_activateView(3)
;Config_hotkey=#+3::Monitor_setWindowTag(3)
;Config_hotkey=#^3::Monitor_toggleWindowTag(3)
;Config_hotkey=#4::Monitor_activateView(4)
;Config_hotkey=#+4::Monitor_setWindowTag(4)
;Config_hotkey=#^4::Monitor_toggleWindowTag(4)
;Config_hotkey=#5::Monitor_activateView(5)
;Config_hotkey=#+5::Monitor_setWindowTag(5)
;Config_hotkey=#^5::Monitor_toggleWindowTag(5)
;Config_hotkey=#6::Monitor_activateView(6)
;Config_hotkey=#+6::Monitor_setWindowTag(6)
;Config_hotkey=#^6::Monitor_toggleWindowTag(6)
;Config_hotkey=#7::Monitor_activateView(7)
;Config_hotkey=#+7::Monitor_setWindowTag(7)
;Config_hotkey=#^7::Monitor_toggleWindowTag(7)
;Config_hotkey=#8::Monitor_activateView(8)
;Config_hotkey=#+8::Monitor_setWindowTag(8)
;Config_hotkey=#^8::Monitor_toggleWindowTag(8)
;Config_hotkey=#9::Monitor_activateView(9)
;Config_hotkey=#+9::Monitor_setWindowTag(9)
;Config_hotkey=#^9::Monitor_toggleWindowTag(9)

;; Monitor management
Config_hotkey=#n::Manager_activateMonitor(0, +1)
Config_hotkey=#p::Manager_activateMonitor(0, -1)
Config_hotkey=#!n::Manager_setWindowMonitor(0, +1)
Config_hotkey=#!p::Manager_setWindowMonitor(0, -1)
Config_hotkey=#^+n::Manager_setViewMonitor(0, +1)
Config_hotkey=#^+p::Manager_setViewMonitor(0, -1)

;; GUI management
;Config_hotkey=#+Space::Monitor_toggleBar()
Config_hotkey=#!Space::Monitor_toggleTaskBar()
;Config_hotkey=#r::Bar_toggleCommandGui()
;; TODO - super r for run dialog
;Config_hotkey=#+y::Monitor_toggleNotifyIconOverflowWindow()
;Config_hotkey=!+y::View_traceAreas()

;; Administration
;; Note that you can also run Reload and ExitApp from the little #! button in the corner of the top bar that bug.n adds.
;; Note that reloading re-runs the key grabbing facilities of AutoHotkey, which messes up the hook order when also using Kanata.
;Config_hotkey=#^e::Run, edit %Config_filePath%
;Config_hotkey=#^s::Config_UI_saveSession()
;; TODO - Reload re-reads the configuration file.  What does Main_reload() even do?
;Config_hotkey=#^r::Main_reload()
;Config_hotkey=#^+r::Reload
;Config_hotkey=#^!r::Reload
;Config_hotkey=#!r::Reload
Config_hotkey=#^q::ExitApp

;Config_hotkey=#Enter::Run, cmder
;Config_hotkey=#^Enter::Run, cmder
;; wt is the default windows terminal
Config_hotkey=#Enter::Run, wt
Config_hotkey=#!Enter::Run, wt
Config_hotkey=#^Enter::Run, cmd
;;Config_hotkey=#v::Run, wt
Config_hotkey=#v::Run, "C:\Program Files\WezTerm\wezterm-gui.exe"
Config_hotkey=#!v::Run, wt
Config_hotkey=#^v::Run, cmd


toggletheme()
{
    try {
        if (RegRead("HKEY_CURRENT_USER\Software\Microsoft\Windows\CurrentVersion\Themes\Personalize", "AppsUseLightTheme") = 0) {
            RegWrite(1, "REG_DWORD", "HKEY_CURRENT_USER\Software\Microsoft\Windows\CurrentVersion\Themes\Personalize", "AppsUseLightTheme")
            RegWrite(1, "REG_DWORD", "HKEY_CURRENT_USER\Software\Microsoft\Windows\CurrentVersion\Themes\Personalize", "SystemUsesLightTheme")
        } else {
            RegWrite(0, "REG_DWORD", "HKEY_CURRENT_USER\Software\Microsoft\Windows\CurrentVersion\Themes\Personalize", "AppsUseLightTheme")
            RegWrite(0, "REG_DWORD", "HKEY_CURRENT_USER\Software\Microsoft\Windows\CurrentVersion\Themes\Personalize", "SystemUsesLightTheme")
        }

  ;  Reload() ; if necessary for a different icon for different themes
    }
}

;; TODO - get this to actually work
Config_hotkey=#^l::toggletheme()
