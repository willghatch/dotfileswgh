#!/usr/bin/env bash

# This is mostly copied from https://github.com/technomancy/dotfiles/blob/master/bin/music-choose

append=false
if [[ "$1" = "--append" ]]; then
    append=true
elif [[ "$1" = "--help" || -n "$1" ]]; then
    echo "Usage: $0 [--append]"
    exit 1
fi

# TODO - maybe make this configurable again?
music_home="$HOME/musc-local/"
mpc=$(state current-mpc)

# Cache directory list
#list_file="$music_home/.music-choose-list-file"
list_file="${XDG_RUNTIME_DIR:-/tmp}/album-choose-list-file"
if [ ! -f "$list_file" ]; then
    find "$music_home" -type d | cut -c $(echo $music_home | wc -c)- > "$list_file"
fi

# Ask the user
#chosen=`cat $list_file | rofi -dmenu`
chosen=`cat $list_file | shuf | dmenu`

echo chose: $chosen
# Add it to mpd
if [ "$chosen" != "" ]; then
    if [[ "$append" = true ]]; then
        $mpc add "$chosen"
    else
        $mpc clear
        $mpc add "$chosen"
        $mpc play
    fi
fi

# You may find it helpful to bind these commands to keystrokes in
# addition to this script:

# notify-send "Now Playing" "`$mpc | head -n 1`"

##!/usr/bin/env ruby
# current = `mpc`.split("\n").first
# playlist = `mpc playlist`.split("\n")
# current_index = playlist.index(current)
# rest = playlist[(current_index + 1) .. (current_index + 5)].join("\n")
# system "notify-send \"#{current}\" \"#{rest}\""
