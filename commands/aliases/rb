#!/bin/sh
# TODO - I want to write some logic to find a “recycling bin” directory for each given file and then move things there rather than directly delete, then have a separate “empty trash” step.  Probably the trash can path I want computed as finding the path closest to root on the same physical device where the user has write permissions, and put a trash directory there?  Or maybe I should do this search but for a pre-existing writeable garbage can, so I don't accidentally make all of these garbage cans that I then have to search for.  This is probably a better idea.  I should add helper commands for creating a garbage dir using the closest-to-root-on-same-drive scheme, a helper for emptying the garbage... Maybe I want some way to list all likely garbage points and see their status -- eg. search all mount points for likely paths (eg. $MOUNT/home/wgh/.GARBAGE_DIR).  When a file doesn't have an appropriate garbage can, the command should fail and report that fact.  I like how `rm` doesn't delete directories recursively without -r, which has probably helped me not delete hidden files and such, so I want to actually have to use `gar -r` to trash directories?  Or maybe I don't care anymore because once I can reclaim things I don't need to be as careful.  Anyway, for now I just want to get used to using a different name than unix `rm` while I'm also practicing switching some other names, so that I'm already used to it for when I write this or, maybe, use one of the already existing commands that does something similar.  I know there are some similar things already, but I'm not sure they work quite how I would like.
# TODO - how do I want to name the garbage/recycling bin dir?  `.rb_recycling-bin`?
# TODO - when moving to trash, files should have a relative name from the trash dir, or maybe from the parent of the trash dir.  Eg. trashing /foo/bar/baz/quux when the trash is /foo/bar/.rb_recycling-bin should result in /foo/bar/.rb_recycling-bin/baz/quux.  Or... should I do it by date?  Eg. /foo/bar/.rb_recycling-bin/YYYY-MM-DD/baz/quux?  I like the date scheme.
exec rm "$@"

