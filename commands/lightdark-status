#!/usr/bin/env bash

help() {
    echo "Usage: $0 [dark|light|toggle|status|soft-update]"
    echo "Gives status if called with no argument or the status argument."
    echo "Sets status if called with light, dark, or toggle."
    echo "On soft-update, does updates for current status (maybe useful for startup)."
    exit 1
}

# Using a user-specific directory is annoying when I run stuff with sudo.  So let's just use a global file for all users, because realistically it's just me.
#lddir="${XDG_RUNTIME_DIR:-/tmp/$USER}"
lddir="/tmp"
mkdir -p $lddir
ldfile="$lddir/lightdark"
lightdark="$WGH_THEME_DARK_OR_LIGHT"
lightdark="${lightdark:-$(cat $ldfile 2>/dev/null)}"
lightdark=${lightdark:-dark}

macos-update(){
    # $1 is either "light" or "dark"
    local isDark=true
    local iterm2Style=Default
    if [[ "$1" = "light" ]]; then
        isDark=false;
        iterm2Style=light
    fi
    local updateString="tell app \"System Events\" to tell appearance preferences to set dark mode to ${isDark}"
    osascript -e "$updateString"
    # I got this line from Stack Overflow: https://apple.stackexchange.com/questions/437581/toggle-system-dark-mode-from-terminal
    #osascript -e 'tell app "System Events" to tell appearance preferences to set dark mode to not dark mode'

    # set iterm2 style
    $DOTFILESWGH/dotlocal/iterm2-python3-venv/bin/python $DOTFILESWGH/commands/iterm2-set-profile.py "$iterm2Style"
}
linux-update(){
    # $1 is either "light" or "dark"
    lightdark-konsole-dbus-update
    # gsettings dynamically sets running gtk3 programs that are connected to the gsd-xsettings daemon (gnome-settings-daemon)
    # The well-supported dark/light themes are Yaru-dark and Yaru-light
    #gsettings set org.gnome.desktop.interface gtk-theme Yaru-$1
    # Alternatively, we can set that theme using xsettings instead.
    if [[ -n "$WAYLAND_DISPLAY" ]]; then
        gsettings set org.gnome.desktop.interface gtk-theme "Yaru-${1}"
        xsettingsd-wrapper
    else
        xsettingsd-wrapper
    fi
    cat "$DOTFILESWGH/xresources-general" "$DOTFILESWGH/xresources-${1}" | xrdb
}

soft-update(){
    # $1 is either "light" or "dark"

    # Do system-specific updates
    if [[ "$(uname)" = "Darwin" ]]; then
        macos-update "$1"
    else
        linux-update "$1"
    fi

    # Generic updates

    # touch my wezterm config file, which will cause any terminal using it to reload the config file
    touch $DOTFILESWGH/wezterm.lua
    echo "$1"
}
update(){
    # $1 is either "light" or "dark"
    mkdir -p $lddir
    echo "$1" > "$ldfile"
    soft-update "$1"
}

if [[ "$#" = 0 ]]; then
    exec echo "$lightdark"
    exit 0
elif [[ "$#" = 1 ]]; then
    if [[ "$1" = "light" || "$1" = "dark" ]]; then
        update "$1"
        exit 0
    elif [[ "$1" = "toggle" ]]; then
        if [[ "$lightdark" = "light" ]]; then
            update dark
            exit 0
        else
            update light
            exit 0
        fi
    elif [[ "$1" == "status" ]]; then
        echo "$lightdark"
        exit 0
    elif [[ "$1" == "soft-update" ]]; then
        soft-update "$lightdark"
        exit 0
    fi
fi

# Print help if argument wasn't recognized.

help
