[user]
	email = william@hatch.uno
	name = William G Hatch
[core]
	excludesfile = ~/dotfileswgh/gitignore_global
[push]
	default = current
[alias]
        # Get and check out pull requests.
        pr  = "!f() { git fetch -fu ${2:-origin} refs/pull/$1/head:pr/$1 && git checkout pr/$1; }; f"
        # Gitlab calls them merge-requests and has a different ref name.  Note that remote refs can be listed with `git ls-remote`
        mr  = "!f() { git fetch -fu ${2:-origin} refs/merge-requests/$1/head:pr/$1 && git checkout pr/$1; }; f"
        pr-clean = "!git for-each-ref refs/heads/pr/* --format='%(refname)' | while read ref ; do branch=${ref#refs/heads/} ; git branch -D $branch ; done"
	ls = log --oneline --decorate
	lg = log --graph --all --decorate
	ll = log --pretty=format:"%C(yellow)%h%Cred%d\\ %Creset%s%Cblue\\ [%cn]" --decorate --numstat
	ld = log --pretty=format:"%C(yellow)%h\\ %ad%Cred%d\\ %Creset%s%Cblue\\ [%cn]" --decorate --date=relative
	lf = log -u
	lc = ls-files -u | awk '{print $4}' | sort -u
	shallow = clone --depth 1
	unshallow = fetch --unshallow
	untracked = ls-files --other --directory --exclude-standard

[url "https://github.com/"]
	insteadOf = gh:
[url "git@github.com:"]
	insteadOf = ghk:

[include]
	path = ~/dotfileswgh/pri/gitconfig
	path = ~/dotfileswgh/dotlocal/gitconfig

## apparently you have to explicitly tell git to check integrity this way...
## according to https://groups.google.com/forum/#!topic/binary-transparency/f-BI4o8HZW0
[transfer]
        fsckobjects = true
[fetch]
        fsckobjects = true
[receive]
        fsckObjects = true
## lineage OS objects have zero padded filemodes... but I guess it shouldn't be a serious problem?
## BUT there appears to be a git bug such that running git fsck by itself uses this setting, but not
## auto-run git-fsck when doing transfer/fetch/receive... so for now I'll just comment out the above
## settings when dealing with lineage OS.
#[fsck]
#	zeroPaddedFilemode = ignore

[color]
	ui = auto
