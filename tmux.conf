# Reload this file inside a running tmux by running `tm source-file $DOTFILESWGH/tmux.conf`

setenv -g TMUX_COLOR "blue"

# Version check examples.
# Version check with if-shell:
#if-shell "tmux -V | grep -q '2.6'" "source-file ~/dotfileswgh/tmux-2.5.conf"
# Version check with %if
#%if #{<=:#{version},3.3}
#set -g status-style "bg=green,fg=blue"
#%else
#set -g status-style "bg=green,fg=blue"
#%endif

# Make it color-able
set -g default-terminal "xterm-24bit-italic"

set -g mouse on

# set-clipboard takes on/external/off
# With external it passes OSC-52 copy commands to the host but does not affect tmux copy buffer
# With on it passes OSC-52 AND makes it affect the tmux copy buffer.
#set -g set-clipboard external # but the external mode doesn't seem to be working for me.
set -g set-clipboard on

# use vi-copy mode instead of emacs-copy mode
set-window-option -g mode-keys vi

# Allow xterm titles in terminal window, terminal scrolling with scrollbar, and setting overrides of C-Up, C-Down, C-Left, C-Right
set -g terminal-overrides "xterm*:XT:smcup@:rmcup@:kUP5=\eOA:kDN5=\eOB:kLFT5=\eOD:kRIT5=\eOC"
set -ga terminal-overrides ",xterm-256color:Tc"
set -ga terminal-overrides ",xterm-256color-italic:Tc"
set -ga terminal-overrides ",rackterm:Tc"
# set terminal name
set -g set-titles on
set -g set-titles-string '#S:<#I> #W __ #{pane_current_command}'
#statusbar
#set -g status-left "[#S]"
set -g status-right "#{=22:pane_current_command}  %Y-%m-%d %H:%M"
# 1 second display
set -g display-time 1000


# Scroll History
set -g history-limit 30000
# Set ability to capture on start and restore on exit window data when running an application
setw -g alternate-screen on
# Lower escape timing from 500ms to 50ms for quicker response to scroll-buffer access.
set -s escape-time 50
# use vlock to lock terminal
set -g lock-command vlock



set -g prefix C-t

## Bind noop to everything
## (so that in windowing/command mode I don't have things falling through)
bind-key a set -g pane-border-bg black
bind-key b set -g pane-border-bg black
bind-key c set -g pane-border-bg black
bind-key d set -g pane-border-bg black
bind-key e set -g pane-border-bg black
bind-key f set -g pane-border-bg black
bind-key g set -g pane-border-bg black
bind-key h set -g pane-border-bg black
bind-key i set -g pane-border-bg black
bind-key j set -g pane-border-bg black
bind-key k set -g pane-border-bg black
bind-key l set -g pane-border-bg black
bind-key m set -g pane-border-bg black
bind-key n set -g pane-border-bg black
bind-key o set -g pane-border-bg black
bind-key p set -g pane-border-bg black
bind-key q set -g pane-border-bg black
bind-key r set -g pane-border-bg black
bind-key s set -g pane-border-bg black
bind-key t set -g pane-border-bg black
bind-key u set -g pane-border-bg black
bind-key v set -g pane-border-bg black
bind-key w set -g pane-border-bg black
bind-key x set -g pane-border-bg black
bind-key y set -g pane-border-bg black
bind-key z set -g pane-border-bg black
bind-key A set -g pane-border-bg black
bind-key B set -g pane-border-bg black
bind-key C set -g pane-border-bg black
bind-key D set -g pane-border-bg black
bind-key E set -g pane-border-bg black
bind-key F set -g pane-border-bg black
bind-key G set -g pane-border-bg black
bind-key H set -g pane-border-bg black
bind-key I set -g pane-border-bg black
bind-key J set -g pane-border-bg black
bind-key K set -g pane-border-bg black
bind-key L set -g pane-border-bg black
bind-key M set -g pane-border-bg black
bind-key N set -g pane-border-bg black
bind-key O set -g pane-border-bg black
bind-key P set -g pane-border-bg black
bind-key Q set -g pane-border-bg black
bind-key R set -g pane-border-bg black
bind-key S set -g pane-border-bg black
bind-key T set -g pane-border-bg black
bind-key U set -g pane-border-bg black
bind-key V set -g pane-border-bg black
bind-key W set -g pane-border-bg black
bind-key X set -g pane-border-bg black
bind-key Y set -g pane-border-bg black
bind-key Z set -g pane-border-bg black

bind-key "." set -g pane-border-bg black
bind-key "?" set -g pane-border-bg black
bind-key "," set -g pane-border-bg black
bind-key "-" set -g pane-border-bg black
bind-key "|" set -g pane-border-bg black
bind-key "_" set -g pane-border-bg black
bind-key "'" set -g pane-border-bg black
bind-key '"' set -g pane-border-bg black
bind-key '`' set -g pane-border-bg black
bind-key "=" set -g pane-border-bg black
bind-key '$' set -g pane-border-bg black
bind-key ":" set -g pane-border-bg black
bind-key "\\" set -g pane-border-bg black
bind-key "/" set -g pane-border-bg black
bind-key "%" set -g pane-border-bg black
bind-key "(" set -g pane-border-bg black
bind-key ")" set -g pane-border-bg black
bind-key "{" set -g pane-border-bg black
bind-key "}" set -g pane-border-bg black
bind-key "[" set -g pane-border-bg black
bind-key "]" set -g pane-border-bg black
bind-key "+" set -g pane-border-bg black
bind-key "*" set -g pane-border-bg black
bind-key "#" set -g pane-border-bg black
bind-key "@" set -g pane-border-bg black
bind-key "^" set -g pane-border-bg black
bind-key '~' set -g pane-border-bg black
bind-key "1" set -g pane-border-bg black
bind-key "2" set -g pane-border-bg black
bind-key "3" set -g pane-border-bg black
bind-key "4" set -g pane-border-bg black
bind-key "5" set -g pane-border-bg black
bind-key "6" set -g pane-border-bg black
bind-key "7" set -g pane-border-bg black
bind-key "8" set -g pane-border-bg black
bind-key "9" set -g pane-border-bg black
bind-key "0" set -g pane-border-bg black

bind-key enter set -g pane-border-bg black
bind-key tab set -g pane-border-bg black
bind-key bspace set -g pane-border-bg black
bind-key dc set -g pane-border-bg black
bind-key escape set -g pane-border-bg black


############################################
## Real key bindings
############################################
bind-key C-t send-prefix
bind-key t send-prefix
# I'm not super keen on this, because I'm not sure how to send M-t if I do this...
# But it is shorter than sending the prefix again...
bind-key -Troot M-t send-prefix

bind-key v split-window -h
bind-key s split-window -v
bind-key f break-pane # not ideal -- this moves a pane to a new window, it doesn't toggle some full-screen setting.  So it isn't a great match to what I have this key do for window managers.
bind-key d detach-client
bind-key q detach-client

# L1
bind-key j select-pane -t :.+
bind-key k select-pane -t :.-
bind-key J swap-pane -U
bind-key K swap-pane -D
bind-key h resize-pane -L 5
bind-key l resize-pane -R 5
bind-key H resize-pane -U 5
bind-key L resize-pane -D 5
bind-key c kill-pane

bind-key space select-layout main-vertical
bind-key u next-layout

# L2
bind-key w next-window
bind-key b previous-window
bind-key W join-pane -h -t :+1
bind-key B join-pane -h -t :-1
bind-key g new-window
bind-key G break-pane # move pane to new window
# L3
bind-key p switch-client -p
bind-key n switch-client -n

bind-key a split-window -h "zsh -i -t" \; send-keys "tmux join-pane -s "
bind-key o command-prompt "find-window '%%'"
bind-key i split-window -v "zsh -i -t" \; send-keys "tmux switch-client -t "

bind-key - command-prompt
bind-key : command-prompt

bind-key y copy-mode

bind-key P paste-buffer

# How to programatically manage the tmux copy/paste buffer:
# The show-buffer command prints the buffer contents.  Eg. run `tmux show-buffer` to output to stdout and use programatically.
# The load-buffer command takes a file as an argument and puts the file contents into the buffer.  You can use on the command line like `echo text for buffer | tmux load-buffer -`.
# Those are the two most useful commands for the command line.  But there are also a couple more:
# You can set the copy/paste buffer with the set-buffer command, which takes the text as an argument.  Can do on the command-line with `tmux set-buffer "test-for-paste-buffer"`.  Probably need to use command substitution or otherwise compute the argument to be useful.
# The paste-buffer command makes tmux “type” the contents of the paste buffer.  This is mostly useful interactively.  But can be used on the command-line with `tmux paste-buffer`.

# Colors, default to input-mode colors.
# If you don't set a bg/fg color, it will be default.  Eg. no bg for pane borders is nice.
# Note that styles can be set as "bg=#123456,fg=#789abc", comma separated for multiple styles and accepting RGB codes.
set -g pane-active-border-style fg=red
set -g pane-border-style fg=blue
set -g status-style "bg=blue,fg=white"

# Pane border line heavy is the easiest to see, I think.
set -g pane-border-lines heavy

%if #{>=:#{version},3.3}
# use color and arrow to indicate active pane in border
set -g pane-border-indicators both
%endif

# change modes
bind-key m set-option key-table prefix \; set -g pane-active-border-style fg=magenta \; set -g pane-border-style fg=magenta \; set -g status-style bg=magenta,fg=white
bind-key C-m set-option key-table prefix \; set -g pane-active-border-style fg=magenta \; set -g pane-border-style fg=magenta \; set -g status-style bg=magenta,fg=white
bind-key e set-option key-table root \; set -g pane-active-border-style fg=blue \; set -g pane-border-style fg=blue \; set -g status-style "bg=blue,fg=white"

# Copy mode
bind-key -T copy-mode-vi v send-keys -X begin-selection
bind-key -T copy-mode-vi y send-keys -X copy-selection
bind-key -T copy-mode-vi V send-keys -X rectangle-toggle
bind-key -T copy-mode-vi Y send-keys -X copy-end-of-line
bind-key -T copy-mode-vi K send-keys -X page-up
bind-key -T copy-mode-vi J send-keys -X page-down
bind-key -T copy-mode-vi Enter send-keys -X cancel

# don't auto-copy and clear selection when using  mouse
# Note that I need to modify copy-mode-vi, not copy-mode!
unbind-key -T copy-mode-vi MouseDragEnd1Pane
bind-key -T copy-mode-vi DoubleClick1Pane select-pane \; send-keys -X select-word
bind-key -T copy-mode-vi TripleClick1Pane select-pane \; send-keys -X select-line
bind-key -T root DoubleClick1Pane select-pane -t = \; if-shell -F "#{||:#{pane_in_mode},#{mouse_any_flag}}" { send-keys -M } { copy-mode -H ; send-keys -X select-word}
bind-key -T root TripleClick1Pane select-pane -t = \; if-shell -F "#{||:#{pane_in_mode},#{mouse_any_flag}}" { send-keys -M } { copy-mode -H ; send-keys -X select-line}



if-shell "test -f ~/dotfileswgh/dotlocal/tmux" "source ~/dotfileswgh/dotlocal/tmux"

